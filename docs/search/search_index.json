{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"all/","title":"All","text":""},{"location":"all/#servicespcsdenable","title":"services.pcsd.enable","text":"<p>Whether to enable pcsd.</p> <p>Type: boolean</p> <p>Default: <code>false</code></p> <p>Example: <code>true</code></p> <p>Declared by:  - modules/default.nix#L30 </p>"},{"location":"all/#servicespcsdenablebinarycache","title":"services.pcsd.enableBinaryCache","text":"<p>Option to add the binary cache to your settings.</p> <p>Type: boolean</p> <p>Default: <code>false</code></p> <p>Declared by:  - modules/default.nix#L32 </p>"},{"location":"all/#servicespcsdenablewebui","title":"services.pcsd.enableWebUI","text":"<p>Enable the webUI of pcsd.</p> <p>Type: boolean</p> <p>Default: <code>false</code></p> <p>Declared by:  - modules/default.nix#L133 </p>"},{"location":"all/#servicespcsdpackage","title":"services.pcsd.package","text":"<p>The pcs package to use. By default, this option will use the <code>packages.default</code> as exposed by this flake.</p> <p>Type: package</p> <p>Default: <code>pcsd.packages.x86_64-linux.default</code></p> <p>Declared by:  - modules/default.nix#L105 </p>"},{"location":"all/#servicespcsdclustername","title":"services.pcsd.clusterName","text":"<p>Name of the cluster. This option will be passed to <code>services.corosync.clusterName</code>.</p> <p>Type: string</p> <p>Default: <code>\"nixcluster\"</code></p> <p>Declared by:  - modules/default.nix#L49 </p>"},{"location":"all/#servicespcsdclusteruserpasswordfile","title":"services.pcsd.clusterUserPasswordFile","text":"<p>Required path to a file containing the password of the <code>hacluster</code> user in clear text.</p> <p>Type: null or absolute path</p> <p>Declared by:  - modules/default.nix#L151 </p>"},{"location":"all/#servicespcsdcorosynckeyfile","title":"services.pcsd.corosyncKeyFile","text":"<p>Required path to a file containing the key for corosync. See <code>corosync-keygen(8)</code>.</p> <p>Type: null or absolute path</p> <p>Declared by:  - modules/default.nix#L41 </p>"},{"location":"all/#servicespcsdextracommands","title":"services.pcsd.extraCommands","text":"<p>A list of additional <code>pcs</code> commands to run after everything else is setup. Cannot have the <code>-f</code> option. See <code>pcs(8)</code></p> <p>Type: list of string matching the pattern ^(pcs .*)$</p> <p>Default: <code>[ ]</code></p> <p>Example:</p> <pre><code>[\n  \"pcs property set stonith-enabled=false\"\n]\n</code></pre> <p>Declared by:  - modules/default.nix#L290 </p>"},{"location":"all/#servicespcsdfinalpackage","title":"services.pcsd.finalPackage","text":"<p>The package defined by <code>services.pcsd.package</code> with overrides applied.</p> <p>Type: package (read only)</p> <p>Default:</p> <pre><code>pcsd.packages.x86_64-linux.default.override {\n  pcs-web-ui = pcsd.packages.x86_64-linux.pcs-web-ui;\n  withWebUI = false;\n}\n</code></pre> <p>Declared by:  - modules/default.nix#L115 </p>"},{"location":"all/#servicespcsdmainnode","title":"services.pcsd.mainNode","text":"<p>The name of the node in charge of updating the cluster settings. Defaults to the first node declared in <code>services.pcsd.nodes</code>.</p> <p>Type: string</p> <p>Default: <code>\"Name of your first node\"</code></p> <p>Declared by:  - modules/default.nix#L57 </p>"},{"location":"all/#servicespcsdnodes","title":"services.pcsd.nodes","text":"<p>List of nodes in the cluster. This option will be passed to <code>services.corosync.nodelist</code>.</p> <p>Type: list of (submodule)</p> <p>Default: <code>[ ]</code></p> <p>Example:</p> <pre><code>[\n  {\n    name = \"this Machine's Hostname\";\n    nodeid = 1;\n    ring_addrs = [\n      # This is where your machine's local ips go\n      \"192.168.0.255\"\n    ];\n  }\n\n  # the other nodes of your cluster go here\n]\n</code></pre> <p>Declared by:  - modules/default.nix#L67 </p>"},{"location":"all/#servicespcsdnodesname","title":"services.pcsd.nodes.*.name","text":"<p>Node name.</p> <p>Type: string</p> <p>Declared by:  - modules/default.nix#L92 </p>"},{"location":"all/#servicespcsdnodesnodeid","title":"services.pcsd.nodes.*.nodeid","text":"<p>Node ID number.</p> <p>Type: signed integer</p> <p>Declared by:  - modules/default.nix#L88 </p>"},{"location":"all/#servicespcsdnodesring_addrs","title":"services.pcsd.nodes.*.ring_addrs","text":"<p>List of IP addresses, one for each ring.</p> <p>Type: list of string</p> <p>Declared by:  - modules/default.nix#L96 </p>"},{"location":"all/#servicespcsdsystemdresources","title":"services.pcsd.systemdResources","text":"<p>An ordered list of sets that represent all the systemd services that will be managed by pcsd.</p> <p>Type: list of (submodule)</p> <p>Default: <code>{ }</code></p> <p>Example:</p> <pre><code>systemdResources = {\n  \"caddy\" = {\n    enable = true;\n    group = \"caddy-grp\";\n  };\n\n  \"headscale\" = {\n    enable = true;\n    group = \"caddy-grp\";\n    startAfter = [\"caddy\"];\n  };\n}\n</code></pre> <p>Declared by:  - modules/default.nix#L158 </p>"},{"location":"all/#servicespcsdsystemdresourcesenable","title":"services.pcsd.systemdResources.*.enable","text":"<p>Whether this service is managed by pcs or not. If not enabled, this service can only be started by a user manually.</p> <p>Type: boolean</p> <p>Default: <code>true</code></p> <p>Declared by:  - modules/default.nix#L180 </p>"},{"location":"all/#servicespcsdsystemdresourcesextraargs","title":"services.pcsd.systemdResources.*.extraArgs","text":"<p>Additional command line options added to pcs commands when making a systemd resource.</p> <p>Type: list of string</p> <p>Default: <code>[ ]</code></p> <p>Declared by:  - modules/default.nix#L207 </p>"},{"location":"all/#servicespcsdsystemdresourcesgroup","title":"services.pcsd.systemdResources.*.group","text":"<p>The name of the group in which we want to place this resource. This allows multiple resources to always be on the same node and can also make the order in which the resources start configurable.</p> <p>Type: null or string</p> <p>Default: <code>null</code></p> <p>Declared by:  - modules/default.nix#L197 </p>"},{"location":"all/#servicespcsdsystemdresourcessystemdname","title":"services.pcsd.systemdResources.*.systemdName","text":"<p>The name of the systemd unit file without \u2018.service\u2019. By default, this option will use the name of this attribute.</p> <p>Type: string</p> <p>Declared by:  - modules/default.nix#L189 </p>"},{"location":"all/#servicespcsdvirtualips","title":"services.pcsd.virtualIps","text":"<p>An ordered list of sets that represent all the virtual IPs that will be managed by pcsd.</p> <p>Type: list of (submodule)</p> <p>Default: <code>{ }</code></p> <p>Example:</p> <pre><code>virtualIps = {\n  \"caddy-vip\" = {\n    ip = \"10.0.0.130\";\n    interface = \"eno1\";\n    group = \"caddy-grp\";\n    startBefore = [\"caddy\"];\n  };\n}\n</code></pre> <p>Declared by:  - modules/default.nix#L218 </p>"},{"location":"all/#servicespcsdvirtualipsenable","title":"services.pcsd.virtualIps.*.enable","text":"<p>Whether this service is managed by pcs or not.</p> <p>Type: boolean</p> <p>Default: <code>true</code></p> <p>Declared by:  - modules/default.nix#L236 </p>"},{"location":"all/#servicespcsdvirtualipscidr","title":"services.pcsd.virtualIps.*.cidr","text":"<p>The CIDR range of the IP.</p> <p>Type: signed integer</p> <p>Default: <code>24</code></p> <p>Declared by:  - modules/default.nix#L263 </p>"},{"location":"all/#servicespcsdvirtualipsextraargs","title":"services.pcsd.virtualIps.*.extraArgs","text":"<p>Additional command line options added to pcs commands when making a virtual IP.</p> <p>Type: list of string</p> <p>Default: <code>[ ]</code></p> <p>Declared by:  - modules/default.nix#L279 </p>"},{"location":"all/#servicespcsdvirtualipsgroup","title":"services.pcsd.virtualIps.*.group","text":"<p>The name of the group in which we want to place this resource. This allows multiple resources to always be on the same node and can also make the order in which the resources start configurable.</p> <p>Type: null or string</p> <p>Default: <code>null</code></p> <p>Declared by:  - modules/default.nix#L269 </p>"},{"location":"all/#servicespcsdvirtualipsid","title":"services.pcsd.virtualIps.*.id","text":"<p>The name of the resource as pacemaker sees it. By default, this option will use the name of this attribute.</p> <p>Type: string</p> <p>Declared by:  - modules/default.nix#L244 </p>"},{"location":"all/#servicespcsdvirtualipsinterface","title":"services.pcsd.virtualIps.*.interface","text":"<p>The network interface this IP will be bound to.</p> <p>Type: string</p> <p>Default: <code>\"eno1\"</code></p> <p>Declared by:  - modules/default.nix#L252 </p>"},{"location":"all/#servicespcsdvirtualipsip","title":"services.pcsd.virtualIps.*.ip","text":"<p>The actual IP address.</p> <p>Type: string</p> <p>Declared by:  - modules/default.nix#L258 </p>"},{"location":"all/#servicespcsdwebuipackage","title":"services.pcsd.webUIPackage","text":"<p>The pcs webUI package to use. By default, this option will use the <code>packages.pcs-web-ui</code> as exposed by this flake.</p> <p>Type: package</p> <p>Default: <code>pcsd.packages.x86_64-linux.pcs-web-ui</code></p> <p>Declared by:  - modules/default.nix#L141 </p>"},{"location":"general/","title":"General","text":""},{"location":"general/#servicespcsdenable","title":"services.pcsd.enable","text":"<p>Whether to enable pcsd.</p> <p>Type: boolean</p> <p>Default: <code>false</code></p> <p>Example: <code>true</code></p> <p>Declared by:  - modules/default.nix#L30 </p>"},{"location":"general/#servicespcsdenablebinarycache","title":"services.pcsd.enableBinaryCache","text":"<p>Option to add the binary cache to your settings.</p> <p>Type: boolean</p> <p>Default: <code>false</code></p> <p>Declared by:  - modules/default.nix#L32 </p>"},{"location":"general/#servicespcsdenablewebui","title":"services.pcsd.enableWebUI","text":"<p>Enable the webUI of pcsd.</p> <p>Type: boolean</p> <p>Default: <code>false</code></p> <p>Declared by:  - modules/default.nix#L133 </p>"},{"location":"general/#servicespcsdpackage","title":"services.pcsd.package","text":"<p>The pcs package to use. By default, this option will use the <code>packages.default</code> as exposed by this flake.</p> <p>Type: package</p> <p>Default: <code>pcsd.packages.x86_64-linux.default</code></p> <p>Declared by:  - modules/default.nix#L105 </p>"},{"location":"general/#servicespcsdclustername","title":"services.pcsd.clusterName","text":"<p>Name of the cluster. This option will be passed to <code>services.corosync.clusterName</code>.</p> <p>Type: string</p> <p>Default: <code>\"nixcluster\"</code></p> <p>Declared by:  - modules/default.nix#L49 </p>"},{"location":"general/#servicespcsdclusteruserpasswordfile","title":"services.pcsd.clusterUserPasswordFile","text":"<p>Required path to a file containing the password of the <code>hacluster</code> user in clear text.</p> <p>Type: null or absolute path</p> <p>Declared by:  - modules/default.nix#L151 </p>"},{"location":"general/#servicespcsdcorosynckeyfile","title":"services.pcsd.corosyncKeyFile","text":"<p>Required path to a file containing the key for corosync. See <code>corosync-keygen(8)</code>.</p> <p>Type: null or absolute path</p> <p>Declared by:  - modules/default.nix#L41 </p>"},{"location":"general/#servicespcsdextracommands","title":"services.pcsd.extraCommands","text":"<p>A list of additional <code>pcs</code> commands to run after everything else is setup. Cannot have the <code>-f</code> option. See <code>pcs(8)</code></p> <p>Type: list of string matching the pattern ^(pcs .*)$</p> <p>Default: <code>[ ]</code></p> <p>Example:</p> <pre><code>[\n  \"pcs property set stonith-enabled=false\"\n]\n</code></pre> <p>Declared by:  - modules/default.nix#L290 </p>"},{"location":"general/#servicespcsdfinalpackage","title":"services.pcsd.finalPackage","text":"<p>The package defined by <code>services.pcsd.package</code> with overrides applied.</p> <p>Type: package (read only)</p> <p>Default:</p> <pre><code>pcsd.packages.x86_64-linux.default.override {\n  pcs-web-ui = pcsd.packages.x86_64-linux.pcs-web-ui;\n  withWebUI = false;\n}\n</code></pre> <p>Declared by:  - modules/default.nix#L115 </p>"},{"location":"general/#servicespcsdmainnode","title":"services.pcsd.mainNode","text":"<p>The name of the node in charge of updating the cluster settings. Defaults to the first node declared in <code>services.pcsd.nodes</code>.</p> <p>Type: string</p> <p>Default: <code>\"Name of your first node\"</code></p> <p>Declared by:  - modules/default.nix#L57 </p>"},{"location":"general/#servicespcsdwebuipackage","title":"services.pcsd.webUIPackage","text":"<p>The pcs webUI package to use. By default, this option will use the <code>packages.pcs-web-ui</code> as exposed by this flake.</p> <p>Type: package</p> <p>Default: <code>pcsd.packages.x86_64-linux.pcs-web-ui</code></p> <p>Declared by:  - modules/default.nix#L141 </p>"},{"location":"nodes/","title":"Nodes","text":""},{"location":"nodes/#servicespcsdnodes","title":"services.pcsd.nodes","text":"<p>List of nodes in the cluster. This option will be passed to <code>services.corosync.nodelist</code>.</p> <p>Type: list of (submodule)</p> <p>Default: <code>[ ]</code></p> <p>Example:</p> <pre><code>[\n  {\n    name = \"this Machine's Hostname\";\n    nodeid = 1;\n    ring_addrs = [\n      # This is where your machine's local ips go\n      \"192.168.0.255\"\n    ];\n  }\n\n  # the other nodes of your cluster go here\n]\n</code></pre> <p>Declared by:  - modules/default.nix#L67 </p>"},{"location":"nodes/#servicespcsdnodesname","title":"services.pcsd.nodes.*.name","text":"<p>Node name.</p> <p>Type: string</p> <p>Declared by:  - modules/default.nix#L92 </p>"},{"location":"nodes/#servicespcsdnodesnodeid","title":"services.pcsd.nodes.*.nodeid","text":"<p>Node ID number.</p> <p>Type: signed integer</p> <p>Declared by:  - modules/default.nix#L88 </p>"},{"location":"nodes/#servicespcsdnodesring_addrs","title":"services.pcsd.nodes.*.ring_addrs","text":"<p>List of IP addresses, one for each ring.</p> <p>Type: list of string</p> <p>Declared by:  - modules/default.nix#L96 </p>"},{"location":"systemd-services/","title":"Systemd services","text":""},{"location":"systemd-services/#servicespcsdsystemdresources","title":"services.pcsd.systemdResources","text":"<p>An ordered list of sets that represent all the systemd services that will be managed by pcsd.</p> <p>Type: list of (submodule)</p> <p>Default: <code>{ }</code></p> <p>Example:</p> <pre><code>systemdResources = {\n  \"caddy\" = {\n    enable = true;\n    group = \"caddy-grp\";\n  };\n\n  \"headscale\" = {\n    enable = true;\n    group = \"caddy-grp\";\n    startAfter = [\"caddy\"];\n  };\n}\n</code></pre> <p>Declared by:  - modules/default.nix#L158 </p>"},{"location":"systemd-services/#servicespcsdsystemdresourcesenable","title":"services.pcsd.systemdResources.*.enable","text":"<p>Whether this service is managed by pcs or not. If not enabled, this service can only be started by a user manually.</p> <p>Type: boolean</p> <p>Default: <code>true</code></p> <p>Declared by:  - modules/default.nix#L180 </p>"},{"location":"systemd-services/#servicespcsdsystemdresourcesextraargs","title":"services.pcsd.systemdResources.*.extraArgs","text":"<p>Additional command line options added to pcs commands when making a systemd resource.</p> <p>Type: list of string</p> <p>Default: <code>[ ]</code></p> <p>Declared by:  - modules/default.nix#L207 </p>"},{"location":"systemd-services/#servicespcsdsystemdresourcesgroup","title":"services.pcsd.systemdResources.*.group","text":"<p>The name of the group in which we want to place this resource. This allows multiple resources to always be on the same node and can also make the order in which the resources start configurable.</p> <p>Type: null or string</p> <p>Default: <code>null</code></p> <p>Declared by:  - modules/default.nix#L197 </p>"},{"location":"systemd-services/#servicespcsdsystemdresourcessystemdname","title":"services.pcsd.systemdResources.*.systemdName","text":"<p>The name of the systemd unit file without \u2018.service\u2019. By default, this option will use the name of this attribute.</p> <p>Type: string</p> <p>Declared by:  - modules/default.nix#L189 </p>"},{"location":"virtual-ips/","title":"Virtual ips","text":""},{"location":"virtual-ips/#servicespcsdvirtualips","title":"services.pcsd.virtualIps","text":"<p>An ordered list of sets that represent all the virtual IPs that will be managed by pcsd.</p> <p>Type: list of (submodule)</p> <p>Default: <code>{ }</code></p> <p>Example:</p> <pre><code>virtualIps = {\n  \"caddy-vip\" = {\n    ip = \"10.0.0.130\";\n    interface = \"eno1\";\n    group = \"caddy-grp\";\n    startBefore = [\"caddy\"];\n  };\n}\n</code></pre> <p>Declared by:  - modules/default.nix#L218 </p>"},{"location":"virtual-ips/#servicespcsdvirtualipsenable","title":"services.pcsd.virtualIps.*.enable","text":"<p>Whether this service is managed by pcs or not.</p> <p>Type: boolean</p> <p>Default: <code>true</code></p> <p>Declared by:  - modules/default.nix#L236 </p>"},{"location":"virtual-ips/#servicespcsdvirtualipscidr","title":"services.pcsd.virtualIps.*.cidr","text":"<p>The CIDR range of the IP.</p> <p>Type: signed integer</p> <p>Default: <code>24</code></p> <p>Declared by:  - modules/default.nix#L263 </p>"},{"location":"virtual-ips/#servicespcsdvirtualipsextraargs","title":"services.pcsd.virtualIps.*.extraArgs","text":"<p>Additional command line options added to pcs commands when making a virtual IP.</p> <p>Type: list of string</p> <p>Default: <code>[ ]</code></p> <p>Declared by:  - modules/default.nix#L279 </p>"},{"location":"virtual-ips/#servicespcsdvirtualipsgroup","title":"services.pcsd.virtualIps.*.group","text":"<p>The name of the group in which we want to place this resource. This allows multiple resources to always be on the same node and can also make the order in which the resources start configurable.</p> <p>Type: null or string</p> <p>Default: <code>null</code></p> <p>Declared by:  - modules/default.nix#L269 </p>"},{"location":"virtual-ips/#servicespcsdvirtualipsid","title":"services.pcsd.virtualIps.*.id","text":"<p>The name of the resource as pacemaker sees it. By default, this option will use the name of this attribute.</p> <p>Type: string</p> <p>Declared by:  - modules/default.nix#L244 </p>"},{"location":"virtual-ips/#servicespcsdvirtualipsinterface","title":"services.pcsd.virtualIps.*.interface","text":"<p>The network interface this IP will be bound to.</p> <p>Type: string</p> <p>Default: <code>\"eno1\"</code></p> <p>Declared by:  - modules/default.nix#L252 </p>"},{"location":"virtual-ips/#servicespcsdvirtualipsip","title":"services.pcsd.virtualIps.*.ip","text":"<p>The actual IP address.</p> <p>Type: string</p> <p>Declared by:  - modules/default.nix#L258 </p>"}]}